const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

async function setupDatabase() {
  const pool = new Pool({
    host: process.env.DATABASE_HOST || 'localhost',
    port: process.env.DATABASE_PORT || 5432,
    database: process.env.DATABASE_NAME || 'articlehub',
    user: process.env.DATABASE_USER || 'postgres',
    password: process.env.DATABASE_PASSWORD || 'password',
  });

  try {
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const client = await pool.connect();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ß–∏—Ç–∞–µ–º SQL-—Å–∫—Ä–∏–ø—Ç
    const sqlScript = fs.readFileSync(path.join(__dirname, '../database/schema.sql'), 'utf8');
    
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL-—Å–∫—Ä–∏–ø—Ç
    await client.query(sqlScript);
    
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã
    const tablesQuery = `
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name;
    `;
    
    const result = await client.query(tablesQuery);
    console.log('üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
    result.rows.forEach(row => {
      console.log(`  - ${row.table_name}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∞–∑–æ–≤—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
    const reactionsQuery = 'SELECT COUNT(*) as count FROM reactions';
    const reactionsResult = await client.query(reactionsQuery);
    console.log(`üé≠ –î–æ–±–∞–≤–ª–µ–Ω–æ —Ä–µ–∞–∫—Ü–∏–π: ${reactionsResult.rows[0].count}`);
    
    client.release();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
    console.error(error.message);
    process.exit(1);
  } finally {
    await pool.end();
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }
}

setupDatabase(); 